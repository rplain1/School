svd
library(tidyverse)
tribble(
~A, ~B, ~C,
1, 2, 3,
4, 5, 6,
7, 8, 9
)
df <- tribble(
~A, ~B, ~C,
1, 2, 3,
4, 5, 6,
7, 8, 9
)
decomp <- svd(df)
V <- decomp$v
U <- decomp$u
S <- decomp$d
V <- decomp$v
U
V
S
1 / s
1 / S
diag(S[1:2])
U[,1:2] %*% diag(S[1:2]) %*% V[, 1:2]
U[,1:2] %*% (diag(S[1:2]) %*% V[, 1:2])
(diag(S[1:2]) %*% V[, 1:2]) %*% U[,1:2] %*%
(diag(S[1:2]) %*% V[, 1:2]) %*% U[,1:2]
(diag(S[1:2]) %*% V[, 1:2]) %*% U[,1:2]
(diag(S[1:2]) %*% V[, 1:2]) %*% t(U[,1:2])
(diag(S[1:2]) %*% as.matrix(V[, 1:2])) %*% t(as.matrix(U[,1:2]))
( as.matrix(V[, 1:2]) %*% diag(S[1:2]) ) %*% t(as.matrix(U[,1:2]))
as.matrix(V[, 1:2])
df
( as.matrix(V[, 1:2]) %*% diag(S[1:2]) ) %*% t(as.matrix(U[,1:2]))
( as.matrix(V[, 1:2]) %*% diag(S[1:2]) ) %*% t(as.matrix(U[,1:2])) |> t
( as.matrix(V[, 1:2]) %*% diag(S[1:2]) ) %*% t(as.matrix(U[,1:2])) -> x
t(x)
t(x)
t(x)
( as.matrix(V[, 1]) %*% diag(S[1]) ) %*% t(as.matrix(U[,1])) -> x
t(x)
( as.matrix(V[, 1]) %*% diag(S[1]) ) %*% t(as.matrix(U[ ,1])) -> x
as.matrix(V[, 1])
diag(S[1]
)
diag(S[1:2])
( as.matrix(V[, 1]) %*% (S[1]) ) %*% t(as.matrix(U[ ,1])) -> x
t(x)
( as.matrix(V[, 1]) %*% (S[1]) ) %*% (as.matrix(U[ ,1])) -> x
( as.matrix(V[, 1]) %*% (S[1]) ) %*% t(as.matrix(U[ ,1])) -> x
t(x)
V
t(V)
as.matrix(V[, 1])
df <- matrix(1:14, nrow = 8, ncol=4)
df <- matrix(1:24, nrow = 8, ncol=4)
decomp <- svd(df)
U <- decomp$u
S <- decomp$d
V <- decomp$v
( as.matrix(V[, 1]) %*% (S[1]) ) %*% t(as.matrix(U[ ,1])) -> x
t(x)
df
( as.matrix(V[, 1:2]) %*% (diag(S[1:2]) ) %*% t(as.matrix(U[ ,1:2])) -> x
t(x)
( as.matrix(V[, 1:2]) %*% (diag(S[1:2])) ) %*% t(as.matrix(U[ ,1:2])) -> x
t(x)
x
U
S
V
( as.matrix(V[, 1:3]) %*% (diag(S[1:3])) ) %*% t(as.matrix(U[ ,1:3])) -> x
x
df
df <- matrix(1:24, nrow = 8, ncol=4, byrow=T)
decomp <- svd(df)
U <- decomp$u
S <- decomp$d
V <- decomp$v
( as.matrix(V[, 1:3]) %*% (diag(S[1:3])) ) %*% t(as.matrix(U[ ,1:3])) -> x
x
t(x)
df
df <- matrix(1:32, nrow = 8, ncol=4, byrow=T)
df
decomp <- svd(df)
U <- decomp$u
S <- decomp$d
V <- decomp$v
( as.matrix(V[, 1:3]) %*% (diag(S[1:3])) ) %*% t(as.matrix(U[ ,1:3])) -> x
t(x)
x
df
( as.matrix(V[, 1:2]) %*% (diag(S[1:2])) ) %*% t(as.matrix(U[ ,1:2])) -> x
t(x)
t(as.matrix(U[ ,1:2])
)
V
(diag(S[1:2]))
as.matrix(V[, 1:2])
( as.matrix(V[, 1:2]) %*% (diag(S[1:2])) ) %*% t(as.matrix(U[ ,1:2])) -> x
t(x)
x
V[, 1:2]
t(V[, 1:2])
diag(S[1:2])
U[, 1:2]
x
library(tidyverse)
players <- nflreadr::load_player_stats(seasons = c(2014:2020), file_type = 'rds')
rosters <- nflreadr::load_rosters(c(2014:2020))
pbp <- nflreadr::load_pbp(2014:2020, file_type = 'rds')
pbp_roster <- pbp %>%
left_join(rosters %>%
select(position, season, gsis_id), by = c('fantasy_id' = 'gsis_id', 'season'))
wr <- pbp_roster %>%
filter(position == 'WR')
wr_stats_full <- wr %>%
mutate(outside_pass = ifelse(pass_location != 'middle', 1, 0),
pass_air_yards = ifelse(is.na(air_yards), 0, air_yards),
pass_air_yards = ifelse(ydstogo <= 10, pass_air_yards, NA)) %>%
group_by(receiver_id) %>%
summarise(
rec = sum(complete_pass),
air_yards = mean(pass_air_yards, na.rm = T),
yards_per_target = mean(yards_gained, na.rm = T),
yards_after_catch = mean(yards_after_catch, na.rm = T),
td_rate = mean(pass_touchdown),
outside_rec = mean(outside_pass, na.rm = T),
dist_from_sticks = mean(pass_air_yards - ydstogo, na.rm = T)
) %>%
filter(rec > 50) %>%
left_join(pbp %>% count(receiver_id, receiver, posteam) %>% group_by(receiver_id) %>% arrange(-n) %>% mutate(rn = row_number()) %>% filter(rn == 1) %>% select(-n, -rn)) %>%
relocate(receiver, .before = rec)
wr_stats <- wr_stats_full %>% select(-starts_with('rec'), -posteam) %>% scale()
wr_stats %>%
as_tibble()
